@using News.Models;
@using News.Data;
@using News.Areas.Admin.Models;
@{
    Category cat_name = TermModel.Get(Model);
    IEnumerable<Posts> posts = null;
    if (cat_name != null)
    {
        posts = TermModel.GetPosts((int)cat_name.CategoryID);
    }
    string term_name = string.Empty;
    if (cat_name != null)
    {
        term_name = cat_name.CategoryName;
        OptionModel.TitleCurrent = cat_name.CategoryName;
    }
    int ItemsPerPage = Convert.ToInt32(OptionModel.GetOption("blog_per_page"));
    int perPage = 10;
}

<div class="page-header">
    <h1>@term_name</h1>
    <ol class="breadcrumb">
        <li><a href="~/">Trang chủ</a></li>
        <li class="active"><a href="~/c/@term_name">@Html.Raw(term_name)</a></li>
    </ol>
</div>
<!-- bage header End -->
<!-- data Start -->
<section>
    <div class="row ">
        <!-- left sec Start -->
        <div class="col-md-11 col-sm-11">
            <div class="row">

                @if (cat_name != null && posts != null)
                {
                    var grid = new WebGrid(null,
                                defaultSort: "",
                                rowsPerPage: perPage,
                                selectionFieldName: "SearchString",
                                ajaxUpdateContainerId: "agrid",
                                sortFieldName: "SortColumn",
                                sortDirectionFieldName: "SortOrder");
                                grid.Bind(posts, autoSortAndPage: true, rowCount: posts.Count());
                    
                    if (grid != null)
                    {
                        foreach (var p in grid.Rows)
                        {
                            var post = (Posts)p.Value;
                            var Author = UserModel.Get((int)post.UserID);
                            var AuthorName = string.Empty;

                            if (AuthorName != null)
                            {
                                AuthorName = Author.UserName;
                            }
                            Category cat = PostModel.GetCategory(post.Name, "category");
                            string Category = string.Empty;
                            string CategoryURLFriendly = string.Empty;

                            if (cat != null)
                            {
                                CategoryURLFriendly = cat.Slug;
                                Category = cat.CategoryName;
                            }

                            <div class="sec-topic col-sm-16 col-md-8 wow fadeInDown animated " data-wow-delay="0.5s">
                                <a href="~/blog/@post.Name">
                                    <img alt="@post.Title" src="~/thumbnail/@post.PostID?size=1000x606" class="img-thumbnail" />
                                    <div class="sec-info">
                                        <h3>@Html.Raw(post.Title)</h3>
                                        <div class="text-danger sub-info-bordered">
                                            <div class="time"><span class="ion-android-data icon"></span>@Html.Raw(Convert.ToDateTime(post.Created).ToString("dd/MM/yyyy hh:mm"))</div>
                                            <div class="comments">
                                                <span class="ion-chatbubbles icon"></span>                                                
                                                @post.CommentCount
                                            </div>
                                        </div>
                                    </div>
                                </a>
                                <p>@Html.Raw(post.Excerpt)</p>
                            </div>
                        }
                        <div class="col-sm-16">
                            <hr>
                            @if (grid.TotalRowCount > perPage)
                            {
                                @grid.PagerList(WebGridPagerModes.All, paginationStyle: "pagination pagination-small pagination-right")
                            }
                        </div>

                    }
                }
                else
                {
                    Response.Redirect("~/error/");
                }
            </div>
        </div>
        <!-- left sec End -->
        @RenderPage(Functions.GetFilePath("sidebar/sidebar-right"))
    </div>

</section>
<!-- Data End -->